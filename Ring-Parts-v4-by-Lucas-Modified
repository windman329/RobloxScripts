local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local radius, height, rotationSpeed, attractionStrength = 50, 100, 1, 1000
local ringPartsEnabled = false
local isDarkTheme = true

local Folder = Instance.new("Folder", Workspace)
local Part = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", Part)
Part.Anchored = true
Part.CanCollide = false
Part.Transparency = 1

if not getgenv().Network then
    getgenv().Network = {
        BaseParts = {},
        Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
    }

    Network.RetainPart = function(Part)
        if typeof(Part) == "Instance" and Part:IsA("BasePart") and Part:IsDescendantOf(Workspace) then
            table.insert(Network.BaseParts, Part)
            Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
            Part.CanCollide = false
        end
    end

    local function EnablePartControl()
        LocalPlayer.ReplicationFocus = Workspace
        RunService.Heartbeat:Connect(function()
            sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
            for _, Part in pairs(Network.BaseParts) do
                if Part:IsDescendantOf(Workspace) then
                    Part.Velocity = Network.Velocity
                end
            end
        end)
    end

    EnablePartControl()
end

local function ForcePart(v)
    if v:IsA("Part") and not v.Anchored and not v.Parent:FindFirstChild("Humanoid") and not v.Parent:FindFirstChild("Head") and v.Name ~= "Handle" then
        for _, x in next, v:GetChildren() do
            if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
                x:Destroy()
            end
        end
        if v:FindFirstChild("Attachment") then
            v:FindFirstChild("Attachment"):Destroy()
        end
        if v:FindFirstChild("AlignPosition") then
            v:FindFirstChild("AlignPosition"):Destroy()
        end
        if v:FindFirstChild("Torque") then
            v:FindFirstChild("Torque"):Destroy()
        end
        v.CanCollide = false
        local Torque = Instance.new("Torque", v)
        Torque.Torque = Vector3.new(100000, 100000, 100000)
        local AlignPosition = Instance.new("AlignPosition", v)
        local Attachment2 = Instance.new("Attachment", v)
        Torque.Attachment0 = Attachment2
        AlignPosition.MaxForce = 9999999999999999
        AlignPosition.MaxVelocity = math.huge
        AlignPosition.Responsiveness = 200
        AlignPosition.Attachment0 = Attachment2
        AlignPosition.Attachment1 = Attachment1
    end
end

local params = {
	Radius = {value = radius, min = 0, max = 200, step = 10},
	Height = {value = height, min = 0, max = 500, step = 10},
	Rotation = {value = rotationSpeed, min = 0, max = 10, step = 0.1},
	Attraction = {value = attractionStrength, min = 0, max = 10000, step = 100}
}

local themes = {
	dark = {
		bg = Color3.fromRGB(32, 32, 32),
		panel = Color3.fromRGB(50, 50, 50),
		text = Color3.fromRGB(240, 240, 240),
		accent = Color3.fromRGB(0, 120, 215),
		slider = Color3.fromRGB(64, 64, 64),
	},
	light = {
		bg = Color3.fromRGB(242, 242, 242),
		panel = Color3.fromRGB(230, 230, 230),
		text = Color3.fromRGB(32, 32, 32),
		accent = Color3.fromRGB(0, 200, 0),
		slider = Color3.fromRGB(200, 200, 200),
	}
}

-- UI Helper
local function roundify(instance, r)
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, r or 4)
	corner.Parent = instance
end

local SoundService = game:GetService("SoundService")
local StarterGui = game:GetService("StarterGui")
local TextChatService = game:GetService("TextChatService")

-- Sound Effects
local function playSound(soundId)
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://" .. soundId
    sound.Parent = SoundService
    sound:Play()
    sound.Ended:Connect(function()
        sound:Destroy()
    end)
end

-- Play initial sound
playSound("2865227271")

-- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "SuperRingPartsGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local theme = themes.dark

local MainFrame = Instance.new("CanvasGroup", ScreenGui)
MainFrame.ClipsDescendants = true
MainFrame.Size = UDim2.new(0, 320, 0, 400)
MainFrame.Position = UDim2.new(0.5, -160, 0.5, -200)
MainFrame.BackgroundColor3 = theme.bg
roundify(MainFrame, 6)

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local Title = Instance.new("TextLabel", MainFrame)
Title.Size = UDim2.new(1, 0, 0, 36)
Title.Text = "Tornado Ring Settings"
Title.Font = Enum.Font.SourceSans
Title.TextSize = 20
Title.BackgroundColor3 = theme.accent
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextXAlignment = Enum.TextXAlignment.Center
Title.TextYAlignment = Enum.TextYAlignment.Center

-- –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è
local ToggleButton = Instance.new("TextButton", MainFrame)
ToggleButton.Size = UDim2.new(0, 280, 0, 32)
ToggleButton.Position = UDim2.new(0.5, -140, 0, 44)
ToggleButton.Text = "Ring Parts Off"
ToggleButton.Font = Enum.Font.SourceSans
ToggleButton.TextSize = 18
ToggleButton.TextColor3 = theme.text
ToggleButton.BackgroundColor3 = theme.panel
roundify(ToggleButton, 4)

-- –ü–æ–ª–∑—É–Ω–∫–∏
local function createSlider(name, config, yOffset)
	local label = Instance.new("TextLabel", MainFrame)
	label.Size = UDim2.new(0, 280, 0, 20)
	label.Position = UDim2.new(0.5, -140, 0, yOffset)
	label.BackgroundTransparency = 1
	label.Font = Enum.Font.SourceSans
	label.TextSize = 16
	label.TextColor3 = theme.text
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Text = name .. ": " .. tostring(config.value)

	local slider = Instance.new("Frame", MainFrame)
	slider.Size = UDim2.new(0, 280, 0, 8)
	slider.Position = UDim2.new(0.5, -140, 0, yOffset + 22)
	slider.BackgroundColor3 = theme.slider
	slider.Name = name
	roundify(slider, 3)

	local fill = Instance.new("Frame", slider)
	fill.Size = UDim2.new((config.value - config.min) / (config.max - config.min), 0, 1, 0)
	fill.Position = UDim2.new(0, 0, 0, 0)
	fill.BackgroundColor3 = theme.accent
	fill.BorderSizePixel = 0
	roundify(fill, 3)

	local dragging = false

	local function updateValue(xPos)
		local rel = math.clamp((xPos - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1)
		local rawVal = config.min + rel * (config.max - config.min)
		local stepped = math.floor(rawVal / config.step + 0.5) * config.step
		stepped = math.clamp(stepped, config.min, config.max)
		config.value = stepped
		fill.Size = UDim2.new((stepped - config.min) / (config.max - config.min), 0, 1, 0)
		label.Text = name .. ": " .. tostring(stepped)
		
	end

	slider.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			updateValue(input.Position.X)
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			updateValue(input.Position.X)
		end
	end)

	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
end

-- –°–ª–∞–π–¥–µ—Ä—ã
local y = 90
for name, config in pairs(params) do
	createSlider(name, config, y)
	y += 50
end

-- Add minimize button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 28, 0, 28)
MinimizeButton.Position = UDim2.new(1, -32, 0, 4)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundColor3 = theme.panel
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- Cornsilk
MinimizeButton.TextSize = 15
MinimizeButton.Parent = MainFrame
roundify(MinimizeButton, 4)

-- Minimize functionality
local minimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
		MainFrame:TweenSize(UDim2.new(0, 320, 0, 36), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "+"
        ToggleButton.Visible = false
    else
		MainFrame:TweenSize(UDim2.new(0, 320, 0, 400), "Out", "Quad", 0.3, true)
        MinimizeButton.Text = "-"
        ToggleButton.Visible = true
    end
    playSound("12221967")
end)

local themeBtn = Instance.new("TextButton", MainFrame)
themeBtn.Size = UDim2.new(0, 28, 0, 28)
themeBtn.Position = UDim2.new(1, -68, 0, 4)
themeBtn.Text = isDarkTheme and "üåô" or "‚òÄÔ∏è"
themeBtn.Font = Enum.Font.SourceSans
themeBtn.TextSize = 20
themeBtn.BackgroundColor3 = theme.panel
themeBtn.TextColor3 = Color3.new(1, 1, 1)
roundify(themeBtn, 6)

themeBtn.MouseButton1Click:Connect(function()
	isDarkTheme = not isDarkTheme
	theme = isDarkTheme and themes.dark or themes.light

	MainFrame.BackgroundColor3 = theme.bg
	Title.BackgroundColor3 = theme.accent
	Title.TextColor3 = Color3.new(1, 1, 1)
	--ToggleButton.BackgroundColor3 = theme.panel
	ToggleButton.TextColor3 = theme.text
	themeBtn.TextColor3 = theme.text
	MinimizeButton.TextColor3 = theme.text
	MinimizeButton.BackgroundColor3 = theme.panel
	ToggleButton.BackgroundColor3 = ringPartsEnabled and theme.accent or theme.panel
	themeBtn.BackgroundColor3 = theme.panel
	themeBtn.Text = isDarkTheme and "üåô" or "‚òÄÔ∏è"

	for _, child in ipairs(MainFrame:GetChildren()) do
		if child:IsA("TextLabel") and child.Name ~= "title" then
			child.TextColor3 = theme.text
		elseif child:IsA("Frame") and child:FindFirstChildOfClass("Frame") then
			child.BackgroundColor3 = theme.slider
			child:FindFirstChildOfClass("Frame").BackgroundColor3 = theme.accent
		end
	end
end)

-- Make GUI draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Title.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Ring Parts Logic
if not getgenv().Network then
    getgenv().Network = {
        BaseParts = {},
        Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
    }
    Network.RetainPart = function(Part)
        if typeof(Part) == "Instance" and Part:IsA("BasePart") and Part:IsDescendantOf(workspace) then
            table.insert(Network.BaseParts, Part)
            Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
            Part.CanCollide = false
        end
    end
    local function EnablePartControl()
        LocalPlayer.ReplicationFocus = workspace
        RunService.Heartbeat:Connect(function()
            sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
            for _, Part in pairs(Network.BaseParts) do
                if Part:IsDescendantOf(workspace) then
                    Part.Velocity = Network.Velocity
                end
            end
        end)
    end
    EnablePartControl()
end

local function RetainPart(Part)
    if Part:IsA("BasePart") and not Part.Anchored and Part:IsDescendantOf(workspace) then
        if Part.Parent == LocalPlayer.Character or Part:IsDescendantOf(LocalPlayer.Character) then
            return false
        end

        Part.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0, 0, 0, 0)
        Part.CanCollide = false
        return true
    end
    return false
end

local parts = {}
local function addPart(part)
    if RetainPart(part) then
        if not table.find(parts, part) then
            table.insert(parts, part)
        end
    end
end

local function removePart(part)
    local index = table.find(parts, part)
    if index then
        table.remove(parts, index)
    end
end

for _, part in pairs(workspace:GetDescendants()) do
    addPart(part)
end

workspace.DescendantAdded:Connect(addPart)
workspace.DescendantRemoving:Connect(removePart)

RunService.Heartbeat:Connect(function()
    if not ringPartsEnabled then return end
    
    local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if humanoidRootPart then
        local tornadoCenter = humanoidRootPart.Position
        for _, part in pairs(parts) do
            if part.Parent and not part.Anchored then
                local pos = part.Position
                local distance = (Vector3.new(pos.X, tornadoCenter.Y, pos.Z) - tornadoCenter).Magnitude
                local angle = math.atan2(pos.Z - tornadoCenter.Z, pos.X - tornadoCenter.X)
				local newAngle = angle + math.rad(params.Rotation.value)
                local targetPos = Vector3.new(
					tornadoCenter.X + math.cos(newAngle) * math.min(params.Radius.value, distance),
                    tornadoCenter.Y + (params.Height.value * (math.abs(math.sin((pos.Y - tornadoCenter.Y) / params.Height.value)))),
					tornadoCenter.Z + math.sin(newAngle) * math.min(params.Radius.value, distance)
                )
                local directionToTarget = (targetPos - part.Position).unit
				part.Velocity = directionToTarget * params.Attraction.value
            end
        end
    end
end)

-- Button functionality
ToggleButton.MouseButton1Click:Connect(function()
    ringPartsEnabled = not ringPartsEnabled
    ToggleButton.Text = ringPartsEnabled and "Ring Parts On" or "Ring Parts Off"
	ToggleButton.BackgroundColor3 = ringPartsEnabled and theme.accent or theme.panel
    playSound("12221967")
end)

-- Get player thumbnail
local userId = Players:GetUserIdFromNameAsync("Robloxlukasgames")
local thumbType = Enum.ThumbnailType.HeadShot
local thumbSize = Enum.ThumbnailSize.Size420x420
local content, isReady = Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)

StarterGui:SetCore("SendNotification", {
    Title = "Super ring parts V4",
	Text = "modified script, original source by @Robloxlukasgames",
    Icon = content,
    Duration = 5
})
